{"version":3,"sources":["components/CsvParser/CsvReader.js","components/Table/HTableHead.js","components/Filter/Filter.js","components/Table/HybridTable.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","aside","display","flexDirection","marginBottom","browseButton","marginTop","width","removeButton","fileName","borderWidth","borderStyle","borderColor","marginLeft","marginRight","padding","muted","color","buttonRef","React","createRef","CsvReader","props","setCSVData","setLoaded","setShowTable","handleOpenDialog","e","current","open","handleRemoveFile","removeFile","classes","ref","onFileLoad","data","onError","err","file","inputElem","reason","console","log","noClick","noDrag","onRemoveFile","config","header","className","Button","variant","onClick","name","label","fontWeight","headCells","id","canSort","HTableHead","order","orderBy","sortRequestHandler","TableHead","TableRow","map","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","direction","property","event","root","spacing","paddingLeft","paddingRight","Filter","searchText","searchDate","setSearchText","setSearchDate","Grid","container","justify","item","TextField","autoFocus","InputProps","startAdornment","InputAdornment","position","value","onChange","target","type","InputLabelProps","shrink","HybridTable","tableData","useState","currentData","setCurrentData","setOrder","setOrderBy","useEffect","undefined","arr","sort","sortingOrder","doSorting","debounceCallback","compare","a","b","split","d1","m1","y1","d2","m2","y2","Date","useCallback","fn","delay","timeoutId","args","clearInterval","setTimeout","apply","debounce","text","date","filteredData","completeData","len","length","dlen","sdate","reverse","join","filter","row","deliveryPincode","orderDate","items","includes","toLowerCase","obj","hasOwnProperty","TableContainer","component","Paper","elevation","Table","size","TableBody","hover","orderId","customerId","idx","Math","random","textAlign","App","csvData","loaded","showTable","Container","maxWidth","submit","disabled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.202fb31b.chunk.js","sourcesContent":["import React from \"react\";\nimport { CSVReader } from \"react-papaparse\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  aside: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginBottom: 10,\n  },\n  browseButton: {\n    marginTop: 5,\n    marginBottom: 5,\n    width: '20%'\n  },\n  removeButton: {\n    marginTop: 5,\n    marginBottom: 5,\n    width: '20%'\n  },\n  fileName: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#ccc\",\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: 2,\n    marginRight: 2,\n    padding: 5,\n    width: \"60%\",\n  },\n  muted: {\n    color: \"#B8B8B8\",\n  },\n}));\n\nconst buttonRef = React.createRef();\n\nconst CsvReader = (props) => {\n\n    const { setCSVData, setLoaded, setShowTable } = props;\n\n    const handleOpenDialog = (e) => {\n        if (buttonRef.current) {\n        buttonRef.current.open(e);\n        }\n    };\n\n    const handleOnFileLoad = (data) => {\n       setCSVData(data);\n       setLoaded(true);\n    };\n\n    const handleOnError = (err, file, inputElem, reason) => {\n        console.log(err);\n    };\n\n    const handleOnRemoveFile = (data) => {\n        setCSVData(data);\n        setLoaded(false);\n        setShowTable(false);\n    };\n\n    const handleRemoveFile = (e) => {\n        if (buttonRef.current) {\n            buttonRef.current.removeFile(e);\n        }\n    };\n\n    const classes = useStyles();\n    return (\n        <CSVReader\n            ref={buttonRef}\n            onFileLoad={handleOnFileLoad}\n            onError={handleOnError}\n            noClick\n            noDrag\n            onRemoveFile={handleOnRemoveFile}\n            config={{header: true }}\n        >\n            {({ file }) => (\n            <aside className={classes.aside}>\n                <Button\n                    className={classes.browseButton}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={handleOpenDialog}\n                >\n                    Browse file\n                </Button>\n                <div className={classes.fileName}>\n                    {file ? (\n                        file?.name\n                    ) : (\n                        <span className={classes.muted}>\n                            Please provide Csv file only\n                        </span>\n                    )}\n                </div>\n                <Button\n                    className={classes.removeButton}\n                    onClick={handleRemoveFile}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                >\n                    Remove\n                </Button>\n            </aside>\n            )}\n        </CSVReader>\n    );\n};\n\nexport default CsvReader;\n","import React from \"react\";\nimport {\n  TableHead,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontWeight: 600,\n  },\n}));\n\nconst headCells = [\n  { id: \"orderId\", label: \"orderId\", canSort: true },\n  { id: \"customerId\", label: \"customerId\", canSort: true },\n  { id: \"deliveryPincode\", label: \"deliveryPincode\", canSort: true },\n  { id: \"orderDate\", label: \"orderDate\", canSort: true },\n  { id: \"items\", label: \"items\", canSort: false },\n];\n\nconst HTableHead = (props) => {\n  const { order, orderBy, sortRequestHandler } = props;\n  const createSortHandler = (property) => (event) => {\n    sortRequestHandler(event, property);\n  };\n\n  const classes = useStyles();\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={\"center\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {headCell.canSort ? (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={createSortHandler(headCell.id)}\n                className={classes.label}\n              >\n                {headCell.label}\n              </TableSortLabel>\n            ) : (\n              <p className={classes.label}>{headCell.label}</p>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default HTableHead;\n","import React from \"react\";\nimport { Grid, makeStyles, TextField, InputAdornment, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nconst Filter = (props) => {\n\n  const { searchText, searchDate, setSearchText, setSearchDate } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"space-between\" className={classes.root}>\n      <Grid item>\n        <TextField\n          id=\"standard-basic\"\n          name=\"searchText\"\n          autoFocus={true}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">PinCode or Item Name</InputAdornment>\n            ),\n          }}\n          value={searchText}\n          onChange={e => setSearchText(e.target.value)}\n        />\n      </Grid>\n      <Grid item>\n        <TextField\n          id=\"date\"\n          type=\"date\"\n          name=\"searchDate\"\n          value={searchDate}\n          onChange={e => setSearchDate(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">Date</InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid item>\n        <Button variant=\"contained\" color=\"secondary\" onClick={e => {\n          setSearchText(\"\");\n          setSearchDate(\"\");\n        }}>Clear Filter</Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport HTableHead from \"./HTableHead\";\nimport Filter from \"../Filter/Filter\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst debounce = (fn, delay) => {\n  let timeoutId;\n  return function (...args) {\n    clearInterval(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), delay);\n  };\n};\n\nconst HybridTable = (props) => {\n  const { tableData } = props;\n  const classes = useStyles();\n  const [currentData, setCurrentData] = useState(tableData);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"orderId\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchDate, setSearchDate] = useState(\"\");\n\n  useEffect(() => {\n    const doSorting = () => {\n      if (orderBy !== \"items\") {\n        if (currentData !== undefined) {\n          let arr = [...currentData];\n          arr.sort(sortingOrder(order, orderBy));\n          setCurrentData(arr);\n        }\n      }\n    };\n    doSorting();\n  }, [order, orderBy]); // eslint-disable-line\n\n  useEffect(() => {\n    const doSearching = () => {\n      if (tableData !== undefined) {\n        debounceCallback(tableData, searchText, searchDate);\n      }\n    };\n    doSearching();\n  }, [searchText, searchDate]); // eslint-disable-line\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const compare = (a, b, orderBy) => {\n    if (orderBy !== \"orderDate\") {\n      return a[orderBy] - b[orderBy];\n    } else {\n      const [d1, m1, y1] = a[orderBy].split(\"/\");\n      const [d2, m2, y2] = b[orderBy].split(\"/\");\n      return new Date(y1, m1 - 1, d1) - new Date(y2, m2 - 1, d2);\n    }\n  };\n\n  const sortingOrder = (order, orderBy) => {\n    if (order === \"asc\") {\n      return (a, b) => compare(a, b, orderBy);\n    } else {\n      return (a, b) => -compare(a, b, orderBy);\n    }\n  };\n\n  const debounceCallback = useCallback(\n    debounce((data, text, date) => {\n      setCurrentData(filteredData(data, text, date));\n    }, 500),\n    []\n  );\n\n  const filteredData = (completeData, text, date) => {\n    if (text === \"\" && date === \"\") {\n      return completeData;\n    }\n\n    const len = text.length;\n    const dlen = date.length;\n    const sdate = date.split(\"-\").reverse().join(\"/\");\n\n    const currentData = completeData.filter((row) => { // eslint-disable-line\n      const { deliveryPincode, orderDate, items } = row;\n      if (len && dlen) {\n        if (orderDate === sdate) {\n          if (deliveryPincode.includes(text)) {\n            return row;\n          } else if (items.toLowerCase().includes(text)) {\n            return row;\n          }\n        }\n      } else if (len) {\n        if (deliveryPincode.includes(text)) {\n          return row;\n        } else if (items.toLowerCase().includes(text)) {\n          return row;\n        }\n      } else if (dlen && orderDate === sdate) {\n        return row;\n      }\n    });\n\n    return currentData;\n  };\n\n  if (tableData === undefined) return <></>;\n\n  if(tableData.length){\n    const obj = tableData[0];\n    if( !obj.hasOwnProperty(\"orderId\") || !obj.hasOwnProperty(\"customerId\") || !obj.hasOwnProperty(\"deliveryPincode\") || !obj.hasOwnProperty(\"orderDate\") || !obj.hasOwnProperty(\"items\") ){\n      return (\n        <h4>Data is not in valid format</h4>\n      )\n    }\n    else{\n      return (\n        <>\n          <Filter\n            searchText={searchText}\n            searchDate={searchDate}\n            setSearchText={setSearchText}\n            setSearchDate={setSearchDate}\n          />\n          <TableContainer className={classes.root} component={Paper} elevation={3}>\n            <Table size=\"small\">\n              <HTableHead\n                sortRequestHandler={handleRequestSort}\n                order={order}\n                orderBy={orderBy}\n              />\n              <TableBody>\n                {currentData.map((row, id) => {\n                  const items = row.items?.split(\";\");\n                  return (\n                    <TableRow hover key={id}>\n                      <TableCell align=\"center\">{row.orderId}</TableCell>\n                      <TableCell align=\"center\">{row.customerId}</TableCell>\n                      <TableCell align=\"center\">{row.deliveryPincode}</TableCell>\n                      <TableCell align=\"center\">{row.orderDate}</TableCell>\n                      <TableCell align=\"center\">\n                        {items?.map((e, idx) => (\n                          <span key={Math.random()}>\n                            {e}\n                            {idx + 1 === items.length ? null : <br />}\n                          </span>\n                        ))}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      );\n    }\n  }\n\n};\n\nexport default HybridTable;\n","import React, { useState } from \"react\";\nimport CsvReader from \"./components/CsvParser/CsvReader\";\nimport HybridTable from \"./components/Table/HybridTable\";\nimport { Button, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [csvData, setCSVData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n\n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <CsvReader setCSVData={setCSVData} setLoaded={setLoaded} setShowTable={setShowTable} />\n      <Button variant=\"contained\" className={classes.submit} disabled={!loaded} onClick={e => setShowTable(!showTable)}>\n        {showTable === false ? \"Dispaly Table\" : \"Hide Table\" }\n      </Button>\n      {showTable ? <HybridTable tableData={csvData?.map(e => e.data)} /> : null}\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}